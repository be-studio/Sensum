# Generated by Django 5.0.4 on 2024-08-07 09:03

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('country', models.CharField(max_length=128, unique=True)),
                ('alt_name', models.CharField(blank=True, max_length=128, null=True)),
                ('iso_code', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='CourseAdditionalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=120)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('department', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('job_title', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Job Title',
                'verbose_name_plural': 'Job Titles',
            },
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('logo', models.CharField(max_length=300)),
                ('link', models.CharField(max_length=300)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=12, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('group', models.CharField(max_length=32)),
                ('alias', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('permission', models.CharField(max_length=32)),
                ('alias', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=120, unique=True)),
                ('primary_subtitle', models.CharField(blank=True, max_length=500)),
                ('secondary_subtitle', models.CharField(blank=True, max_length=500)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('about_description', models.TextField()),
                ('audience_groups', models.ManyToManyField(to='auth.group', verbose_name='Audience Groups')),
                ('additional_info', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='sensum.courseadditionalinfo')),
                ('lecturers', models.ManyToManyField(to='sensum.lecturer')),
                ('sponsors', models.ManyToManyField(to='sensum.sponsor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=60, unique=True)),
                ('subtitle', models.CharField(blank=True, max_length=120)),
                ('time', models.TimeField(blank=True)),
                ('date', models.DateField(blank=True)),
                ('location', models.CharField(blank=True, max_length=90)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensum.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('description', models.TextField()),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensum.event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('avatar', models.CharField(blank=True, max_length=512, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('address_street_1', models.CharField(blank=True, max_length=128, null=True)),
                ('address_street_2', models.CharField(blank=True, max_length=128, null=True)),
                ('address_street_3', models.CharField(blank=True, max_length=128, null=True)),
                ('settlement', models.CharField(blank=True, max_length=128, null=True)),
                ('locality', models.CharField(blank=True, max_length=128, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=128, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('landline_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('extension', models.CharField(blank=True, max_length=8, null=True)),
                ('mobile_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_country', to='sensum.country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('landline_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('extension', models.CharField(blank=True, max_length=8, null=True)),
                ('mobile_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('home_address_street_1', models.CharField(blank=True, max_length=128, null=True)),
                ('home_address_street_2', models.CharField(blank=True, max_length=128, null=True)),
                ('home_address_street_3', models.CharField(blank=True, max_length=128, null=True)),
                ('home_settlement', models.CharField(blank=True, max_length=128, null=True)),
                ('home_locality', models.CharField(blank=True, max_length=128, null=True)),
                ('home_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('business_address_street_1', models.CharField(blank=True, max_length=128, null=True)),
                ('business_address_street_2', models.CharField(blank=True, max_length=128, null=True)),
                ('business_address_street_3', models.CharField(blank=True, max_length=128, null=True)),
                ('business_settlement', models.CharField(blank=True, max_length=128, null=True)),
                ('business_locality', models.CharField(blank=True, max_length=128, null=True)),
                ('business_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('website', models.CharField(blank=True, max_length=256, null=True)),
                ('emergency_name', models.CharField(blank=True, max_length=256, null=True)),
                ('emergency_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_address_street_1', models.CharField(blank=True, max_length=128, null=True)),
                ('emergency_address_street_2', models.CharField(blank=True, max_length=128, null=True)),
                ('emergency_address_street_3', models.CharField(blank=True, max_length=128, null=True)),
                ('emergency_settlement', models.CharField(blank=True, max_length=128, null=True)),
                ('emergency_locality', models.CharField(blank=True, max_length=128, null=True)),
                ('emergency_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
                ('dark_mode', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True, null=True)),
                ('first_password', models.BooleanField(default=True)),
                ('pending_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('email_change_token', models.CharField(blank=True, max_length=255, null=True)),
                ('email_change_token_date_created', models.DateTimeField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('business_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='business_country_country', to='sensum.country')),
                ('emergency_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emergency_country_country', to='sensum.country')),
                ('home_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_country_country', to='sensum.country')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensum.department')),
                ('job_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensum.jobtitle')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='sensum.organization')),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensum.title')),
                ('user_groups', models.ManyToManyField(related_name='users', to='sensum.usergroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Updated')),
                ('registration_number', models.CharField(max_length=60, unique=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensum.event')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='usergroup',
            name='permissions',
            field=models.ManyToManyField(to='sensum.userpermission'),
        ),
    ]
